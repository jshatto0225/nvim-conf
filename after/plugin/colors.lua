require('rose-pine').setup({
    disable_background = false,
    styles = {
        italic = false
    }
})

require('tokyonight').setup({
    transparent = false,
    styles = {
        -- Style to be applied to different syntax groups
        -- Value is any valid attr-list value for `:help nvim_set_hl`
        comments = { italic = false },
        keywords = { italic = false },
        functions = { italic = false },
        variables = { italic = false },
    },
})

require('catppuccin').setup({
    flavour = "mocha",
    transparent_background = false,
    no_italic = true,
    no_bold = true
})

require('neosolarized').setup({
    background_set = false,
    commit_italics = true,
})

local colorbuddy = require('colorbuddy')
colorbuddy.colorscheme("madcolors")
local Color = colorbuddy.Color
local colors = colorbuddy.colors
local Group = colorbuddy.Group
local goups = colorbuddy.groups
local styles = colorbuddy.styles

Color.new('NormalFg', '#e6e6e6')
Color.new('NormalBg', '#1f1f1f')
Color.new('MatchParenBg', '#316264')
Color.new('cCommentStart', '#bc95d8')
Color.new('cComment', '#6f5674')
Color.new('cCommentLFg', '#767676')
Color.new('cCommentLBg', '#1a1a1a')
Color.new('cCppOutIf2', '#a1a591')
Color.new('cDoxygenCommentLead', '#ff78b9')
Color.new('cDoxygenComment', '#dfbccb')
Color.new('cConstant', '#607ffc')
Color.new('cString', '#ffa0a0')
Color.new('cChar', '#fcff00')
Color.new('cNumber', '#8ea3ff')
Color.new('cppBoolean', '#0e56ff')
Color.new('Ident', '#b5ff6f')
Color.new('cFunc', '#90cbf1')
Color.new('cStatement', '#00ffea')
Color.new('cppAccess', '#b07626')
Color.new('cCondit', '#0462ff')
Color.new('cRepeat', '#ffa304')
Color.new('cLabel', '#FFEE68')
Color.new('cUserLabel', '#ff1f1f')
Color.new('cOperator', '#fc6984')
Color.new('Keyword', '#ffee68')
Color.new('cppExceptions', '#fc4234')
Color.new('cPreProc', '#bb70e0')
Color.new('cInclude', '#ffa50a')
Color.new('cIncluded', '#d4bb7f')
Color.new('cDefine', '#bf81fa')
Color.new('cPreCondit', '#bf81fa')
Color.new('cType', '#19b30b')
Color.new('cStorageClass', '#ffee68')
Color.new('cStructure', '#8c8fd9')
Color.new('cTypedef', '#8c8fd9')
Color.new('cVulkanHandle', '#ffb3be')
Color.new('cSpecial', '#ecc909')
Color.new('cFormat', '#ecc909')
Color.new('Debug', '#c23eff')
Color.new('cwDebugLabel', '#db8eff')
Color.new('cSpaceError', '#1f0000')
Color.new('UnderlinedFg', '#0000ee')
Color.new('UnderlinedBg', '#cacaca')
Color.new('Error', '#fc4234')
Color.new('cBadContinuation', '#fc4234')
Color.new('cTodo', '#fc4234')
Color.new('cError', '#fc4234')
Color.new('NonTextFg', '#2f2f2f')
Color.new('NonTextBg', '#202020')
Color.new('NonTextSp', '#202020')
Color.new('Note', '#00ff00')
Color.new('Todo', '#ff0000')
Color.new('gray', '#444444')

Group.new('Normal', colors.fg, colors.bg)
Group.new('PreProc', colors.cPreProc)
Group.new('@constant', colors.cPreProc)
Group.new('Constant', colors.cPreProc)
Group.new('@constant.builtin.c', colors.cPreProc)
Group.new('Include', colors.cInclude)
Group.new('@keyword.import.c', colors.cInclude)
Group.new('@keyword.directive.define.c', colors.cPreProc)
Group.new('@keyword.directive.c', colors.cPreProc)
Group.new('cIncluded', colors.cIncluded)
Group.new('Number', colors.cNumber)
Group.new('Structure', colors.cStructure)
Group.new('@keyword', colors.cStructure)
Group.new('@keyword.statement', colors.cStatement)
Group.new('@type', colors.cType)
Group.new('@type.builtin.c', colors.cType)
Group.new('Type', colors.cType)
Group.new('StorageClass', colors.cStorageClass)
Group.new('@keyword.modifier.c', colors.cStorageClass)
Group.new('String', colors.cString)
Group.new('@function', colors.cFunc)
Group.new('@lsp.type.property.c', colors.cFunc)
Group.new('@property.c', colors.cFunc)
Group.new('Statement', colors.cStatement)
Group.new('@keyword.return.c', colors.cStatement)
Group.new('Operator', colors.fg)
Group.new('SpecialChar', colors.cSpecial)
Group.new('Conditional', colors.cCondit)
Group.new('Label', colors.cLabel)
Group.new('Repeat', colors.cRepeat)
Group.new('@keyword.repeat.c', colors.cRepeat)
Group.new('@keyword.conditional.c', colors.cCondit)
Group.new('Comment', colors.cCommentLFg, colors.cCommentLBg)
Group.new('MatchParen', nil, colors.MatchParenBg)
Group.new('Todo', colors.Todo, colors.cCommentLBg, styles.bold + styles.underline)
Group.new('Note', colors.Note, colors.cCommentLBg, styles.bold + styles.underline)
Group.new('Function', colors.cFunc)
Group.new('Directory', colors.cFunc)
Group.new('@keyword.label', colors.cLabel)
Group.new('@keyword.debug', colors.cwDebugLabel)
Group.new('CursorLine', nil, colors.gray)
Group.new('Visual', nil, colors.gray)

--Color.new('background', '#0c0c0c')
--Color.new('statusline', '#0c0c0c')
--Color.new('gray50', '#7f7f7f')
--Color.new('idk', '#dab98f')
----Color.new('burlywood3', '#a08563')
--Color.new('burlywood3', '#cdaa7d')
--Color.new('darkgoldenrod3', '#cd950c')
--Color.new('olivedrab', '#6b8e23')
--Color.new('sienna3', '#cc5735')
--Color.new('aquamarine3', '#478980')
--Color.new('casey_type', '#edb211')
--Color.new('casey_keyword', '#ac7b0b')
--Color.new('line', '#070750')
--Color.new('orange', '#cc4400')
--Color.new('red', '#FF0000')
--Color.new('green', '#00FF00')

--Group.new('iCursor', colors.background, colors.iCursorBg, nil)
--Group.new('nCursor', colors.nCursorFg, colors.nCursorBg, nil)
--Group.new('WinSeparator', colors.orange, colors.orange, nil)
--Group.new('statusline', colors.white, colors.orange, nil)
--Group.new('statuslinenc', colors.burlywood3, colors.background)
--Group.new('@operator', colors.burlywood3)
--Group.new('Normal', colors.burlywood3, colors.background)
--Group.new('StatusLine', colors.burlywood3, colors.statusline)
--Group.new('LineNr', colors.burlywood3, colors.statusline)
--Group.new('Comment', colors.gray50)
--Group.new('Function', colors.sienna3)
--Group.new('@function.builtin', colors.sienna3)
--Group.new('@function.method', colors.sienna3)
--Group.new('Type', colors.casey_type)
--Group.new('Include', colors.casey_type)
--Group.new('@type.builtin', colors.casey_keyword, nil, nil)
--Group.new('Keyword', colors.casey_keyword)
--Group.new('@keyword.repeat', colors.casey_keyword)
--Group.new('@keyword.function', colors.casey_keyword)
--Group.new('@keyword.conditional', colors.casey_keyword)
--Group.new('@keyword.return', colors.casey_keyword)
--Group.new('@keyword.operator', colors.casey_keyword)
--Group.new('@keyword.directive.define', colors.idk)
--Group.new('String', colors.olivedrab)
--Group.new('@string.escape', colors.olivedrab)
--Group.new('Delimiter', colors.burlywood3)
--Group.new('Variable', colors.burlywood3)
--Group.new('@punctuation.delimiter', colors.burlywood3)
--Group.new('@variable.parameter', colors.burlywood3)
--Group.new('@variable.member', colors.burlywood3)
--Group.new('@property', colors.burlywood3)
--Group.new('@parameter', colors.burlywood3)
--Group.new('@boolean', colors.olivedrab)
--Group.new('@constructor', colors.sienna3)
--Group.new('Operator', colors.burlywood3)
--Group.new('@punctuation.bracket', colors.burlywood3)
--Group.new('@number', colors.olivedrab)
--Group.new('@module', colors.aquamarine3)
--Group.new('@constant', nil, nil, nil)
--Group.new('Constant', colors.aquamarine3, nil, nil)
--Group.new('@constant.macro', colors.aquamarine3, nil, nil)
--Group.new('@constant.builtin', colors.burlywood3, nil, nil)
--Group.new('Special', colors.aquamarine3)
--Group.new('@lsp.type.enumMember.cpp', colors.aquamarine3)
--Group.new('@lsp.type.enumMember', colors.aquamarine3)
--Group.new('@lsp.type.parameter', colors.burlywood3)
--Group.new('PreProc', colors.aquamarine3)
--Group.new('@keyword.import.cpp', colors.idk)
--Group.new('@keyword.import', colors.idk)
--Group.new('@keyword.directive.cpp', colors.idk)
--Group.new('@keyword.directive', colors.idk)
--Group.new('@punctuation.special', colors.burlywood3)
--Group.new('MatchParen', nil, nil, styles.bold)
--Group.new('CursorLine', nil, colors.line)

function ColorMyPencils(color)
	color = color or "rose-pine-moon"
	vim.cmd.colorscheme(color)

    vim.api.nvim_set_hl(0, "Normal", { bg = "none" })
    vim.api.nvim_set_hl(0, "NormalNC", { bg = "none" })
    vim.api.nvim_set_hl(0, "NormalSB", { bg = "none" })
    vim.api.nvim_set_hl(0, "NormalFloat", { bg = "none" })
    vim.api.nvim_set_hl(0, "TelescopeNormal", { bg = "none" })

    --vim.cmd('hi StatusLine guifg=#696567 guibg=#000000 guisp=#000000 gui=NONE')
    --vim.cmd('hi StatusLineNC guifg=#696567 guibg=#25365a guisp=#25366a gui=NONE')
    --vim.cmd('hi Search guifg=NONE guibg=#754f22 guisp=#754f22 gui=NONE')
    --vim.cmd('hi VertSplit guifg=#ffee68')
    --vim.cmd('hi cSpaceError guibg=#1f0000')
    --vim.cmd[[ match cSpaceError /\s\+$/ ]]
    --vim.cmd('2match Todo /TODO/')
    --vim.cmd('3match Note /NOTE/')
    --vim.cmd('syntax keyword cLabel case')
end

ColorMyPencils()
